{"ast":null,"code":"import * as R from 'ramda';\nimport ENDPOINTS from '../../api';\nimport { handleStatuses } from '../../aspects';\nexport const getStatisticsUsers = R.pipeP(token => fetch(\"\".concat(ENDPOINTS.STATISTICS, \"/users\"), {\n  method: 'GET',\n  headers: {\n    authorization: \"Bearer \".concat(token)\n  }\n}), handleStatuses(), x => x.json());\nexport const getStatisticsTracks = R.pipeP(token => fetch(\"\".concat(ENDPOINTS.STATISTICS, \"/posts\"), {\n  method: 'GET',\n  headers: {\n    authorization: \"Bearer \".concat(token)\n  }\n}), handleStatuses(), x => x.json());","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/modules/statistics/StatisticsManager.js"],"names":["R","ENDPOINTS","handleStatuses","getStatisticsUsers","pipeP","token","fetch","STATISTICS","method","headers","authorization","x","json","getStatisticsTracks"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,CAAC,CAACI,KAAF,CAChCC,KAAK,IACHC,KAAK,WAAIL,SAAS,CAACM,UAAd,aAAkC;AACrCC,EAAAA,MAAM,EAAE,KAD6B;AAErCC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYL,KAAZ;AAAf;AAF4B,CAAlC,CAFyB,EAMhCH,cAAc,EANkB,EAOhCS,CAAC,IAAIA,CAAC,CAACC,IAAF,EAP2B,CAA3B;AAUP,OAAO,MAAMC,mBAAmB,GAAGb,CAAC,CAACI,KAAF,CACjCC,KAAK,IACHC,KAAK,WAAIL,SAAS,CAACM,UAAd,aAAkC;AACrCC,EAAAA,MAAM,EAAE,KAD6B;AAErCC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYL,KAAZ;AAAf;AAF4B,CAAlC,CAF0B,EAMjCH,cAAc,EANmB,EAOjCS,CAAC,IAAIA,CAAC,CAACC,IAAF,EAP4B,CAA5B","sourcesContent":["import * as R from 'ramda'\nimport ENDPOINTS from '../../api'\nimport { handleStatuses } from '../../aspects'\n\nexport const getStatisticsUsers = R.pipeP(\n  token =>\n    fetch(`${ENDPOINTS.STATISTICS}/users`, {\n      method: 'GET',\n      headers: { authorization: `Bearer ${token}` },\n    }),\n  handleStatuses(),\n  x => x.json(),\n)\n\nexport const getStatisticsTracks = R.pipeP(\n  token =>\n    fetch(`${ENDPOINTS.STATISTICS}/posts`, {\n      method: 'GET',\n      headers: { authorization: `Bearer ${token}` },\n    }),\n  handleStatuses(),\n  x => x.json(),\n)\n"]},"metadata":{},"sourceType":"module"}