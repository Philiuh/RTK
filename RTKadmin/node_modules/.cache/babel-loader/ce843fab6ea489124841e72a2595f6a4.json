{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/philip/React-projects/RTKadmin/src/screens/PostsScreen.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding-top: 56px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport * as R from 'ramda';\nimport styled from 'styled-components';\nimport { lifecycle, withHandlers, withState } from 'recompose';\nimport { PostsList, CreatePostFormContainer, EditPostFormContainer } from '../components/posts';\nimport { Grid } from '@material-ui/core';\nimport { AppBar } from '../components/commons';\nconst ListGridItem = styled(Grid).attrs({\n  item: true,\n  xs: 12\n})(_templateObject());\nconst PostsScreen = R.compose(lifecycle({\n  componentDidMount() {\n    this.props.requestPosts();\n  }\n\n}), withState('isModalOpenEdit', 'showUpdateModal', false), withState('isModalOpenCreate', 'showCreateModal', false), withHandlers({\n  toggleCreateModal: ({\n    showCreateModal,\n    isModalOpenCreate\n  }) => () => showCreateModal(!isModalOpenCreate),\n  toggleUpdateModal: ({\n    showUpdateModal,\n    isModalOpenEdit\n  }) => () => showUpdateModal(!isModalOpenEdit)\n}))(({\n  posts,\n  removePost,\n  isModalOpenEdit,\n  isModalOpenCreate,\n  toggleCreateModal,\n  toggleUpdateModal,\n  selectPost\n}) => React.createElement(Grid, {\n  container: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(AppBar, {\n  position: \"fixed\",\n  buttons: [{\n    name: 'Создать пост',\n    handler: toggleCreateModal\n  }],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n})), React.createElement(ListGridItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, isModalOpenCreate && React.createElement(CreatePostFormContainer, {\n  onClose: toggleCreateModal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), isModalOpenEdit && React.createElement(EditPostFormContainer, {\n  onClose: toggleUpdateModal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), React.createElement(PostsList, {\n  selectPost: selectPost,\n  openUpdateModal: toggleUpdateModal,\n  posts: posts,\n  removePost: removePost,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}))));\nexport default PostsScreen;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/screens/PostsScreen.js"],"names":["React","R","styled","lifecycle","withHandlers","withState","PostsList","CreatePostFormContainer","EditPostFormContainer","Grid","AppBar","ListGridItem","attrs","item","xs","PostsScreen","compose","componentDidMount","props","requestPosts","toggleCreateModal","showCreateModal","isModalOpenCreate","toggleUpdateModal","showUpdateModal","isModalOpenEdit","posts","removePost","selectPost","name","handler"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,QAAmD,WAAnD;AAEA,SACEC,SADF,EAEEC,uBAFF,EAGEC,qBAHF,QAIO,qBAJP;AAKA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,MAAMC,YAAY,GAAGT,MAAM,CAACO,IAAD,CAAN,CAAaG,KAAb,CAAmB;AACtCC,EAAAA,IAAI,EAAE,IADgC;AAEtCC,EAAAA,EAAE,EAAE;AAFkC,CAAnB,CAAH,mBAAlB;AAOA,MAAMC,WAAW,GAAGd,CAAC,CAACe,OAAF,CAClBb,SAAS,CAAC;AACRc,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,YAAX;AACD;;AAHO,CAAD,CADS,EAMlBd,SAAS,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,KAAvC,CANS,EAOlBA,SAAS,CAAC,mBAAD,EAAsB,iBAAtB,EAAyC,KAAzC,CAPS,EAQlBD,YAAY,CAAC;AACXgB,EAAAA,iBAAiB,EAAE,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAD,KAA4C,MAC7DD,eAAe,CAAC,CAACC,iBAAF,CAFN;AAGXC,EAAAA,iBAAiB,EAAE,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAD,KAA0C,MAC3DD,eAAe,CAAC,CAACC,eAAF;AAJN,CAAD,CARM,EAelB,CAAC;AACCC,EAAAA,KADD;AAECC,EAAAA,UAFD;AAGCF,EAAAA,eAHD;AAICH,EAAAA,iBAJD;AAKCF,EAAAA,iBALD;AAMCG,EAAAA,iBAND;AAOCK,EAAAA;AAPD,CAAD,KASE,oBAAC,IAAD;AAAM,EAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,MAAV;AAAW,EAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AACE,EAAA,QAAQ,EAAC,OADX;AAEE,EAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEV;AAAjC,GAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,iBAAiB,IAChB,oBAAC,uBAAD;AAAyB,EAAA,OAAO,EAAEF,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAIGK,eAAe,IACd,oBAAC,qBAAD;AAAuB,EAAA,OAAO,EAAEF,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,EAOE,oBAAC,SAAD;AACE,EAAA,UAAU,EAAEK,UADd;AAEE,EAAA,eAAe,EAAEL,iBAFnB;AAGE,EAAA,KAAK,EAAEG,KAHT;AAIE,EAAA,UAAU,EAAEC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CAPF,CAxBgB,CAApB;AAiDA,eAAeZ,WAAf","sourcesContent":["import React from 'react'\nimport * as R from 'ramda'\nimport styled from 'styled-components'\nimport { lifecycle, withHandlers, withState } from 'recompose'\n\nimport {\n  PostsList,\n  CreatePostFormContainer,\n  EditPostFormContainer,\n} from '../components/posts'\nimport { Grid } from '@material-ui/core'\n\nimport { AppBar } from '../components/commons'\n\nconst ListGridItem = styled(Grid).attrs({\n  item: true,\n  xs: 12,\n})`\n  padding-top: 56px;\n`\n\nconst PostsScreen = R.compose(\n  lifecycle({\n    componentDidMount() {\n      this.props.requestPosts()\n    },\n  }),\n  withState('isModalOpenEdit', 'showUpdateModal', false),\n  withState('isModalOpenCreate', 'showCreateModal', false),\n  withHandlers({\n    toggleCreateModal: ({ showCreateModal, isModalOpenCreate }) => () =>\n      showCreateModal(!isModalOpenCreate),\n    toggleUpdateModal: ({ showUpdateModal, isModalOpenEdit }) => () =>\n      showUpdateModal(!isModalOpenEdit),\n  }),\n)(\n  ({\n    posts,\n    removePost,\n    isModalOpenEdit,\n    isModalOpenCreate,\n    toggleCreateModal,\n    toggleUpdateModal,\n    selectPost,\n  }) => (\n    <Grid container>\n      <Grid item xs={12}>\n        <AppBar\n          position=\"fixed\"\n          buttons={[{ name: 'Создать пост', handler: toggleCreateModal }]}\n        />\n      </Grid>\n      <ListGridItem>\n        {isModalOpenCreate && (\n          <CreatePostFormContainer onClose={toggleCreateModal} />\n        )}\n        {isModalOpenEdit && (\n          <EditPostFormContainer onClose={toggleUpdateModal} />\n        )}\n        <PostsList\n          selectPost={selectPost}\n          openUpdateModal={toggleUpdateModal}\n          posts={posts}\n          removePost={removePost}\n        />\n      </ListGridItem>\n    </Grid>\n  ),\n)\n\nexport default PostsScreen\n"]},"metadata":{},"sourceType":"module"}