{"ast":null,"code":"import _objectWithoutProperties from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/philip/React-projects/RTKadmin/src/components/commons/AppBar.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #fff;\\n  border-color: #fff;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport AppBarMaterial from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\nconst ToolBatTitle = styled(Typography).attrs({\n  variant: 'title',\n  color: 'inherit'\n})(_templateObject());\nconst HeaderButton = styled(Button).attrs({\n  variant: 'outlined'\n})(_templateObject2());\n\nconst AppBar = (_ref) => {\n  let _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? [] : _ref$buttons,\n      props = _objectWithoutProperties(_ref, [\"buttons\"]);\n\n  return React.createElement(AppBarMaterial, Object.assign({\n    position: \"static\",\n    color: \"primary\"\n  }, props, {\n    style: {\n      zIndex: 1200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ToolBatTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\\u044B\"), buttons.map(({\n    name,\n    handler\n  }) => React.createElement(HeaderButton, {\n    key: name,\n    onClick: handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, name))));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/components/commons/AppBar.js"],"names":["React","AppBarMaterial","Toolbar","Button","Typography","styled","ToolBatTitle","attrs","variant","color","HeaderButton","AppBar","buttons","props","zIndex","map","name","handler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACD,UAAD,CAAN,CAAmBG,KAAnB,CAAyB;AAC5CC,EAAAA,OAAO,EAAE,OADmC;AAE5CC,EAAAA,KAAK,EAAE;AAFqC,CAAzB,CAAH,mBAAlB;AAOA,MAAMC,YAAY,GAAGL,MAAM,CAACF,MAAD,CAAN,CAAeI,KAAf,CAAqB;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAArB,CAAH,oBAAlB;;AAKA,MAAMG,MAAM,GAAG;AAAA,0BAAGC,OAAH;AAAA,MAAGA,OAAH,6BAAa,EAAb;AAAA,MAAoBC,KAApB;;AAAA,SACb,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,KAAK,EAAC;AAFR,KAGMA,KAHN;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAEGF,OAAO,CAACG,GAAR,CAAY,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACX,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAED,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,CADD,CAFH,CANF,CADa;AAAA,CAAf;;AAkBA,eAAeL,MAAf","sourcesContent":["import React from 'react'\nimport AppBarMaterial from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nconst ToolBatTitle = styled(Typography).attrs({\n  variant: 'title',\n  color: 'inherit',\n})`\n  flex: 1;\n`\n\nconst HeaderButton = styled(Button).attrs({ variant: 'outlined' })`\n  color: #fff;\n  border-color: #fff;\n`\n\nconst AppBar = ({ buttons = [], ...props }) => (\n  <AppBarMaterial\n    position=\"static\"\n    color=\"primary\"\n    {...props}\n    style={{ zIndex: 1200 }}\n  >\n    <Toolbar>\n      <ToolBatTitle>Подкасты</ToolBatTitle>\n      {buttons.map(({ name, handler }) => (\n        <HeaderButton key={name} onClick={handler}>\n          {name}\n        </HeaderButton>\n      ))}\n    </Toolbar>\n  </AppBarMaterial>\n)\n\nexport default AppBar\n"]},"metadata":{},"sourceType":"module"}