{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/philip/React-projects/RTKadmin/src/screens/StatisticsTracksScreen.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding-top: 56px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport * as R from 'ramda';\nimport { withProps, lifecycle } from 'recompose';\nimport styled from 'styled-components';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { Grid } from '@material-ui/core';\nimport { AppBar, BaseTable } from '../components/commons';\nimport { Navbar } from '../components/statistics';\nconst ListGridItem = styled(Grid).attrs({\n  item: true,\n  xs: 12\n})(_templateObject());\n\nconst StatisticsRow = ({\n  postId,\n  title,\n  count\n}) => React.createElement(TableRow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(TableCell, {\n  children: postId,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(TableCell, {\n  children: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), React.createElement(TableCell, {\n  children: count,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}));\n\nconst StatisticsTracksScreen = R.compose(lifecycle({\n  componentDidMount() {\n    this.props.requestTracksStatistics();\n  }\n\n}), withProps(({\n  statistics\n}) => ({\n  rows: statistics.map(x => React.createElement(StatisticsRow, Object.assign({\n    key: x.id\n  }, x, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })))\n})))(({\n  rows\n}) => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(Grid, {\n  container: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(AppBar, {\n  position: \"fixed\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), React.createElement(ListGridItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(BaseTable, {\n  headerNames: [{\n    name: 'Номер подкаста',\n    cellStyle: {\n      width: 150,\n      paddingRight: 24\n    }\n  }, {\n    name: 'Название подкаста',\n    cellStyle: {\n      width: 200,\n      paddingRight: 24\n    }\n  }, {\n    name: 'Количество прослушиваний'\n  }],\n  rows: rows,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n})))));\nexport default StatisticsTracksScreen;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/screens/StatisticsTracksScreen.js"],"names":["React","R","withProps","lifecycle","styled","TableRow","TableCell","Grid","AppBar","BaseTable","Navbar","ListGridItem","attrs","item","xs","StatisticsRow","postId","title","count","StatisticsTracksScreen","compose","componentDidMount","props","requestTracksStatistics","statistics","rows","map","x","id","name","cellStyle","width","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as R from 'ramda'\nimport { withProps, lifecycle } from 'recompose'\nimport styled from 'styled-components'\n\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { Grid } from '@material-ui/core'\n\nimport { AppBar, BaseTable } from '../components/commons'\nimport { Navbar } from '../components/statistics'\n\nconst ListGridItem = styled(Grid).attrs({\n  item: true,\n  xs: 12,\n})`\n  padding-top: 56px;\n`\n\nconst StatisticsRow = ({ postId, title, count }) => (\n  <TableRow>\n    <TableCell children={postId} />\n    <TableCell children={title} />\n    <TableCell children={count} />\n  </TableRow>\n)\n\nconst StatisticsTracksScreen = R.compose(\n  lifecycle({\n    componentDidMount() {\n      this.props.requestTracksStatistics()\n    },\n  }),\n  withProps(({ statistics }) => ({\n    rows: statistics.map(x => <StatisticsRow key={x.id} {...x} />),\n  })),\n)(({ rows }) => (\n  <React.Fragment>\n    <Grid container>\n      <Grid item xs={12}>\n        <AppBar position=\"fixed\" />\n      </Grid>\n      <ListGridItem>\n        <Navbar />\n        <BaseTable\n          headerNames={[\n            {\n              name: 'Номер подкаста',\n              cellStyle: { width: 150, paddingRight: 24 },\n            },\n            {\n              name: 'Название подкаста',\n              cellStyle: { width: 200, paddingRight: 24 },\n            },\n            {\n              name: 'Количество прослушиваний',\n            },\n          ]}\n          rows={rows}\n        />\n      </ListGridItem>\n    </Grid>\n  </React.Fragment>\n))\n\nexport default StatisticsTracksScreen\n"]},"metadata":{},"sourceType":"module"}