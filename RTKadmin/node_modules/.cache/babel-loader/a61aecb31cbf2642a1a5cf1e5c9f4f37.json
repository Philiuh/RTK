{"ast":null,"code":"import { call, put, all, takeLatest, select } from 'redux-saga/effects';\nimport { REQUEST_USERS_STATISTICS, setUsersStatistics, setTracksStatistics, REQUEST_TRACKS_STATISTICS } from './duck';\nimport * as StatisticsManager from './StatisticsManager';\nimport { getToken } from '../auth';\nimport { handleErrors } from '../../aspects';\nimport { delayError } from '../errors';\nconst requestUsersStatistics = handleErrors({\n  anyErrorActionCreator: () => delayError({\n    error: 'Ошибка соединения',\n    time: 5000\n  })\n})(function* () {\n  const token = yield select(getToken);\n  const statistics = yield call(StatisticsManager.getStatisticsUsers, token);\n  yield put(setUsersStatistics(statistics));\n});\nconst requestTracksStatistics = handleErrors({\n  anyErrorActionCreator: () => delayError({\n    error: 'Ошибка соединения',\n    time: 5000\n  })\n})(function* () {\n  const token = yield select(getToken);\n  const statistics = yield call(StatisticsManager.getStatisticsTracks, token);\n  yield put(setTracksStatistics(statistics));\n});\n\nconst statisticsSaga = function* () {\n  yield all([takeLatest(REQUEST_USERS_STATISTICS, requestUsersStatistics), takeLatest(REQUEST_TRACKS_STATISTICS, requestTracksStatistics)]);\n};\n\nexport default statisticsSaga;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/modules/statistics/sagas.js"],"names":["call","put","all","takeLatest","select","REQUEST_USERS_STATISTICS","setUsersStatistics","setTracksStatistics","REQUEST_TRACKS_STATISTICS","StatisticsManager","getToken","handleErrors","delayError","requestUsersStatistics","anyErrorActionCreator","error","time","token","statistics","getStatisticsUsers","requestTracksStatistics","getStatisticsTracks","statisticsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,oBAAnD;AACA,SACEC,wBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,yBAJF,QAKO,QALP;AAMA,OAAO,KAAKC,iBAAZ,MAAmC,qBAAnC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,sBAAsB,GAAGF,YAAY,CAAC;AAC1CG,EAAAA,qBAAqB,EAAE,MACrBF,UAAU,CAAC;AAAEG,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GAAD;AAF8B,CAAD,CAAZ,CAG5B,aAAY;AACb,QAAMC,KAAK,GAAG,MAAMb,MAAM,CAACM,QAAD,CAA1B;AACA,QAAMQ,UAAU,GAAG,MAAMlB,IAAI,CAACS,iBAAiB,CAACU,kBAAnB,EAAuCF,KAAvC,CAA7B;AAEA,QAAMhB,GAAG,CAACK,kBAAkB,CAACY,UAAD,CAAnB,CAAT;AACD,CAR8B,CAA/B;AAUA,MAAME,uBAAuB,GAAGT,YAAY,CAAC;AAC3CG,EAAAA,qBAAqB,EAAE,MACrBF,UAAU,CAAC;AAAEG,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GAAD;AAF+B,CAAD,CAAZ,CAG7B,aAAY;AACb,QAAMC,KAAK,GAAG,MAAMb,MAAM,CAACM,QAAD,CAA1B;AACA,QAAMQ,UAAU,GAAG,MAAMlB,IAAI,CAACS,iBAAiB,CAACY,mBAAnB,EAAwCJ,KAAxC,CAA7B;AAEA,QAAMhB,GAAG,CAACM,mBAAmB,CAACW,UAAD,CAApB,CAAT;AACD,CAR+B,CAAhC;;AAUA,MAAMI,cAAc,GAAG,aAAY;AACjC,QAAMpB,GAAG,CAAC,CACRC,UAAU,CAACE,wBAAD,EAA2BQ,sBAA3B,CADF,EAERV,UAAU,CAACK,yBAAD,EAA4BY,uBAA5B,CAFF,CAAD,CAAT;AAID,CALD;;AAOA,eAAeE,cAAf","sourcesContent":["import { call, put, all, takeLatest, select } from 'redux-saga/effects'\nimport {\n  REQUEST_USERS_STATISTICS,\n  setUsersStatistics,\n  setTracksStatistics,\n  REQUEST_TRACKS_STATISTICS,\n} from './duck'\nimport * as StatisticsManager from './StatisticsManager'\nimport { getToken } from '../auth'\nimport { handleErrors } from '../../aspects'\nimport { delayError } from '../errors'\n\nconst requestUsersStatistics = handleErrors({\n  anyErrorActionCreator: () =>\n    delayError({ error: 'Ошибка соединения', time: 5000 }),\n})(function*() {\n  const token = yield select(getToken)\n  const statistics = yield call(StatisticsManager.getStatisticsUsers, token)\n\n  yield put(setUsersStatistics(statistics))\n})\n\nconst requestTracksStatistics = handleErrors({\n  anyErrorActionCreator: () =>\n    delayError({ error: 'Ошибка соединения', time: 5000 }),\n})(function*() {\n  const token = yield select(getToken)\n  const statistics = yield call(StatisticsManager.getStatisticsTracks, token)\n\n  yield put(setTracksStatistics(statistics))\n})\n\nconst statisticsSaga = function*() {\n  yield all([\n    takeLatest(REQUEST_USERS_STATISTICS, requestUsersStatistics),\n    takeLatest(REQUEST_TRACKS_STATISTICS, requestTracksStatistics),\n  ])\n}\n\nexport default statisticsSaga\n"]},"metadata":{},"sourceType":"module"}