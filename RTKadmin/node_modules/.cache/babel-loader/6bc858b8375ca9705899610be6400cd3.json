{"ast":null,"code":"import _objectWithoutProperties from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/philip/React-projects/RTKadmin/src/components/commons/BaseTable.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding-top: 50px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 20px 0;\\n  overflow-x: auto;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nconst TableWrapper = styled(Paper)(_templateObject());\nconst TableHeadCellText = styled(Typography).attrs({\n  variant: 'subheading'\n})(_templateObject2());\nconst EmptyTableText = styled(Typography).attrs({\n  variant: 'subheading'\n})(_templateObject3());\n\nconst BaseTable = (_ref) => {\n  let headerNames = _ref.headerNames,\n      rows = _ref.rows,\n      props = _objectWithoutProperties(_ref, [\"headerNames\", \"rows\"]);\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(TableWrapper, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, headerNames.map(({\n    name,\n    cellStyle\n  }) => React.createElement(TableCell, {\n    style: cellStyle,\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TableHeadCellText, {\n    children: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))))), !!rows.length && React.createElement(TableBody, {\n    children: rows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), !rows.length && React.createElement(EmptyTableText, {\n    children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0432 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u0435 \\u043D\\u0435\\u0442\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default BaseTable;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/components/commons/BaseTable.js"],"names":["React","Fragment","styled","Table","TableBody","TableCell","TableHead","TableRow","Typography","Paper","TableWrapper","TableHeadCellText","attrs","variant","EmptyTableText","BaseTable","headerNames","rows","props","map","name","cellStyle","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,YAAY,GAAGR,MAAM,CAACO,KAAD,CAAT,mBAAlB;AAKA,MAAME,iBAAiB,GAAGT,MAAM,CAACM,UAAD,CAAN,CAAmBI,KAAnB,CAAyB;AACjDC,EAAAA,OAAO,EAAE;AADwC,CAAzB,CAAH,oBAAvB;AAIA,MAAMC,cAAc,GAAGZ,MAAM,CAACM,UAAD,CAAN,CAAmBI,KAAnB,CAAyB;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAzB,CAAH,oBAApB;;AAKA,MAAME,SAAS,GAAG;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,MAAgBC,IAAhB,QAAgBA,IAAhB;AAAA,MAAyBC,KAAzB;;AAAA,SAChB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,CAACG,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACf,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,SAAlB;AAA6B,IAAA,GAAG,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEA,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF,EAUG,CAAC,CAACH,IAAI,CAACK,MAAP,IAAiB,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEL,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVpB,CADF,CADF,EAgBG,CAACA,IAAI,CAACK,MAAN,IAAgB,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,2GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBnB,CADgB;AAAA,CAAlB;;AAqBA,eAAeP,SAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nconst TableWrapper = styled(Paper)`\n  margin: 20px 0;\n  overflow-x: auto;\n`\n\nconst TableHeadCellText = styled(Typography).attrs({\n  variant: 'subheading',\n})``\n\nconst EmptyTableText = styled(Typography).attrs({ variant: 'subheading' })`\n  text-align: center;\n  padding-top: 50px;\n`\n\nconst BaseTable = ({ headerNames, rows, ...props }) => (\n  <Fragment>\n    <TableWrapper {...props}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {headerNames.map(({ name, cellStyle }) => (\n              <TableCell style={cellStyle} key={name}>\n                <TableHeadCellText children={name} />\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {!!rows.length && <TableBody children={rows} />}\n      </Table>\n    </TableWrapper>\n\n    {!rows.length && <EmptyTableText children=\"Данных в таблице нет\" />}\n  </Fragment>\n)\n\nexport default BaseTable\n"]},"metadata":{},"sourceType":"module"}