{"ast":null,"code":"import { call, put, all, takeLatest, select } from 'redux-saga/effects';\nimport { REQUEST_FEEDBACK, setFeedback } from './duck';\nimport * as FeedbackManager from './FeedbackManager';\nimport { getToken } from '../auth';\nimport { handleErrors } from '../../aspects';\nimport { delayError } from '../errors';\nconst requestFeedback = handleErrors({\n  anyErrorActionCreator: () => delayError({\n    error: 'Ошибка соединения',\n    time: 5000\n  })\n})(function* () {\n  const token = yield select(getToken);\n  const feedback = yield call(FeedbackManager.getFeedback, token);\n  yield put(setFeedback(feedback));\n});\n\nconst feedbackSaga = function* () {\n  yield all([takeLatest(REQUEST_FEEDBACK, requestFeedback)]);\n};\n\nexport default feedbackSaga;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/modules/feedback/sagas.js"],"names":["call","put","all","takeLatest","select","REQUEST_FEEDBACK","setFeedback","FeedbackManager","getToken","handleErrors","delayError","requestFeedback","anyErrorActionCreator","error","time","token","feedback","getFeedback","feedbackSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,oBAAnD;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,QAA9C;AACA,OAAO,KAAKC,eAAZ,MAAiC,mBAAjC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,eAAe,GAAGF,YAAY,CAAC;AACnCG,EAAAA,qBAAqB,EAAE,MACrBF,UAAU,CAAC;AAAEG,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GAAD;AAFuB,CAAD,CAAZ,CAGrB,aAAY;AACb,QAAMC,KAAK,GAAG,MAAMX,MAAM,CAACI,QAAD,CAA1B;AACA,QAAMQ,QAAQ,GAAG,MAAMhB,IAAI,CAACO,eAAe,CAACU,WAAjB,EAA8BF,KAA9B,CAA3B;AACA,QAAMd,GAAG,CAACK,WAAW,CAACU,QAAD,CAAZ,CAAT;AACD,CAPuB,CAAxB;;AASA,MAAME,YAAY,GAAG,aAAY;AAC/B,QAAMhB,GAAG,CAAC,CAACC,UAAU,CAACE,gBAAD,EAAmBM,eAAnB,CAAX,CAAD,CAAT;AACD,CAFD;;AAIA,eAAeO,YAAf","sourcesContent":["import { call, put, all, takeLatest, select } from 'redux-saga/effects'\nimport { REQUEST_FEEDBACK, setFeedback } from './duck'\nimport * as FeedbackManager from './FeedbackManager'\nimport { getToken } from '../auth'\nimport { handleErrors } from '../../aspects'\nimport { delayError } from '../errors'\n\nconst requestFeedback = handleErrors({\n  anyErrorActionCreator: () =>\n    delayError({ error: 'Ошибка соединения', time: 5000 }),\n})(function*() {\n  const token = yield select(getToken)\n  const feedback = yield call(FeedbackManager.getFeedback, token)\n  yield put(setFeedback(feedback))\n})\n\nconst feedbackSaga = function*() {\n  yield all([takeLatest(REQUEST_FEEDBACK, requestFeedback)])\n}\n\nexport default feedbackSaga\n"]},"metadata":{},"sourceType":"module"}