{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/philip/React-projects/RTKadmin/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/philip/React-projects/RTKadmin/src/components/commons/TagInput.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #fff;\\n  width: 15px;\\n  height: 15px;\\n  margin-left: 5px;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #fff;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  border-radius: 5px;\\n  background-color: #3f51b5;\\n  padding: 0 3px;\\n  margin: 2px;\\n  color: #fff;\\n  display: flex;\\n  align-items: center;\\n\\n  &:not(:first-child) {\\n    margin-left: 5px;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { TextField, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { withStateHandlers, withHandlers } from 'recompose';\nimport * as R from 'ramda';\nimport Close from '@material-ui/icons/Close';\nimport { passPropsTo } from '../../utils';\nconst TagsWrapper = styled.div(_templateObject());\nconst Tag = styled.div(_templateObject2());\nconst TagText = styled(Typography)(_templateObject3());\nconst RemoveTag = passPropsTo('onClick', 'tag')(styled(Close)(_templateObject4()));\nconst TagInput = R.compose(withStateHandlers({\n  inputValue: ''\n}, {\n  onChangeInput: () => ({\n    target: {\n      value\n    }\n  }) => ({\n    inputValue: value\n  }),\n  resetInputValue: () => () => ({\n    inputValue: ''\n  })\n}), withHandlers({\n  addTag: ({\n    onChange,\n    inputValue,\n    resetInputValue,\n    tagsValue\n  }) => ({\n    key\n  }) => {\n    if (key !== 'Enter') {\n      return;\n    }\n\n    onChange(R.uniq([...tagsValue, inputValue]));\n    resetInputValue();\n  },\n  removeTag: ({\n    tagsValue,\n    onChange\n  }) => ({\n    tag\n  }) => onChange(R.reject(R.equals(tag), tagsValue))\n}))(({\n  label,\n  addTag,\n  fullWidth,\n  margin,\n  onChangeInput,\n  tagsValue,\n  removeTag,\n  inputValue\n}) => React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(TextField, {\n  fullWidth: fullWidth,\n  label: label,\n  margin: margin,\n  onKeyPress: addTag,\n  onChange: onChangeInput,\n  value: inputValue,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(TagsWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, tagsValue.map(x => React.createElement(Tag, {\n  key: x,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, React.createElement(TagText, {\n  variant: \"body1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, x), React.createElement(RemoveTag, {\n  tag: x,\n  onClick: removeTag,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}))))));\nexport default TagInput;","map":{"version":3,"sources":["/Users/philip/React-projects/RTKadmin/src/components/commons/TagInput.js"],"names":["React","Fragment","TextField","Typography","styled","withStateHandlers","withHandlers","R","Close","passPropsTo","TagsWrapper","div","Tag","TagText","RemoveTag","TagInput","compose","inputValue","onChangeInput","target","value","resetInputValue","addTag","onChange","tagsValue","key","uniq","removeTag","tag","reject","equals","label","fullWidth","margin","map","x"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport { TextField, Typography } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { withStateHandlers, withHandlers } from 'recompose'\nimport * as R from 'ramda'\nimport Close from '@material-ui/icons/Close'\nimport { passPropsTo } from '../../utils'\n\nconst TagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst Tag = styled.div`\n  border-radius: 5px;\n  background-color: #3f51b5;\n  padding: 0 3px;\n  margin: 2px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n\n  &:not(:first-child) {\n    margin-left: 5px;\n  }\n`\n\nconst TagText = styled(Typography)`\n  color: #fff;\n`\n\nconst RemoveTag = passPropsTo('onClick', 'tag')(styled(Close)`\n  color: #fff;\n  width: 15px;\n  height: 15px;\n  margin-left: 5px;\n  cursor: pointer;\n`)\n\nconst TagInput = R.compose(\n  withStateHandlers(\n    { inputValue: '' },\n    {\n      onChangeInput: () => ({ target: { value } }) => ({ inputValue: value }),\n      resetInputValue: () => () => ({ inputValue: '' }),\n    },\n  ),\n  withHandlers({\n    addTag: ({ onChange, inputValue, resetInputValue, tagsValue }) => ({\n      key,\n    }) => {\n      if (key !== 'Enter') {\n        return\n      }\n      onChange(R.uniq([...tagsValue, inputValue]))\n      resetInputValue()\n    },\n    removeTag: ({ tagsValue, onChange }) => ({ tag }) =>\n      onChange(R.reject(R.equals(tag), tagsValue)),\n  }),\n)(\n  ({\n    label,\n    addTag,\n    fullWidth,\n    margin,\n    onChangeInput,\n    tagsValue,\n    removeTag,\n    inputValue,\n  }) => (\n    <Fragment>\n      <TextField\n        fullWidth={fullWidth}\n        label={label}\n        margin={margin}\n        onKeyPress={addTag}\n        onChange={onChangeInput}\n        value={inputValue}\n      />\n      <TagsWrapper>\n        {tagsValue.map(x => (\n          <Tag key={x}>\n            <TagText variant=\"body1\">{x}</TagText>\n            <RemoveTag tag={x} onClick={removeTag} />\n          </Tag>\n        ))}\n      </TagsWrapper>\n    </Fragment>\n  ),\n)\n\nexport default TagInput\n"]},"metadata":{},"sourceType":"module"}